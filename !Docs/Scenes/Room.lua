camera = createcamera()
setposition(camera, 0, 6, -25)
setambientlight(camera, 90, 100, 120)

light = createlight()
setposition(light, 0, 9.5, -5)
setsize(light, 5, 0, 5)
setcolor(light, 255, 220, 180)
setbrightness(light, 4.5)

plane = createplane()
setcolor(plane, 200, 200, 190)
plane = createplane()
setplanevector(plane, 0, -1, 0, -10)
setcolor(plane, 200, 200, 190)
plane = createplane()
setplanevector(plane, 1, 0, 0, -10)
setcolor(plane, 100, 150, 100)
plane = createplane()
setplanevector(plane, -1, 0, 0, -10)
setcolor(plane, 255, 150, 150)
plane = createplane()
setplanevector(plane, 0, 0, -1, 0)
setcolor(plane, 200, 200, 190)
plane = createplane()
setplanevector(plane, 0, 0, 1, -20)
setcolor(plane, 200, 200, 190)

sphere = createsphere()
setposition(sphere, -4, 2, -5)
setradius(sphere, 2)
setcolor(sphere, 0, 0, 0)
setreflection(sphere, 1)
cylinder = createcylinder()
setposition(cylinder, 8, 5, -10)
setradius(cylinder, 1)
setheight(cylinder, 10)
setcolor(cylinder, 0, 0, 0)
setreflection(cylinder, 1)

cube = createcube()
setposition(cube, 0, 10.499, -5)
setsize(cube, 5, 1, 5)
setcolor(cube, 1000, 1000, 1000)
cube = createcube()
setposition(cube, 7, 4, 0)
setsize(cube, 6, 6, .3)
setcolor(cube, 0, 0, 0)
setreflection(cube, 1)
cube = createcube()
setposition(cube, -10, 4, -8)
setsize(cube, .3, 6, 10)
setcolor(cube, 0, 0, 0)
setreflection(cube, 1)

cube = createcube()
setposition(cube, 4, .5, -12)
setsize(cube, 1, 1, 1)
setcolor(cube, 230, 210, 60)
cylinder = createcylinder()
setposition(cylinder, -7.5, 1, -11)
setradius(cylinder, .75)
setheight(cylinder, 2)
setcolor(cylinder, 60, 210, 230)
tube = createtube()
setposition(tube, 3, .3, -5)
setradius(tube, 2)
setinnerradius(tube, 1.6)
setheight(tube, .6)
setcolor(tube, 60, 230, 210)

for x = -1, 1, 2 do
	for y = -1, 1, 2 do
		for z = -1, 1, 2 do
			light = createlight()
			setposition(light, x * 8, y * 3 + 5, z * 8 - 10)
			setsize(light, 1, 1, 1)
			setbrightness(light, 1)
		end
	end
end

render(camera)